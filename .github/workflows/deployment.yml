# Code generated by kickr; DO NOT EDIT.

name: Deployment
run-name: Deployment

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: Deployment run mode.
        type: choice
        options:
          - full
          - none
        default: full

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - id: conclusion
        uses: actions/github-script@v8
        with:
          result-encoding: string
          script: |-
            const { data } = await github.rest.actions.listWorkflowRuns({
              branch: process.env.GITHUB_REF_NAME,
              owner: context.repo.owner,
              page: 1,
              per_page: 1,
              repo: context.repo.repo,
              workflow_id: process.env.WORKFLOW_ID,
            })

            const latest = data.workflow_runs.at(0)
            if (!latest) {
              throw new Error(`No '${process.env.WORKFLOW_ID}' workflow runs found on ref name '${process.env.GITHUB_REF_NAME}'`)
            }
            console.log(latest)
            return latest.conclusion
        env:
          WORKFLOW_ID: integration.yml
      - if: ${{ steps.conclusion.outputs.result != 'success' }}
        run: |-
          echo "Latest '$WORKFLOW_RUN' workflow on '$GITHUB_REF_NAME' isn't in success conclusion: '$WORKFLOW_CONCLUSION'" && exit 1
        env:
          WORKFLOW_CONCLUSION: ${{ steps.conclusion.outputs.result }}

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v5
      - id: version
        run: |-
          DESCRIBE=$(git describe --tags || echo "v0.0.0")
          echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  hugo-build:
    name: Hugo Build
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # fetch all history for .GitInfo and .Lastmod
          submodules: true # fetch Hugo themes (true OR recursive)
      - uses: actions/cache@v4
        with:
          path: /home/runner/.cache/hugo_cache
          key: hugo-${{ hashFiles('go.sum') }}
          restore-keys: |
            hugo-
      # https://github.com/marketplace/actions/hugo-setup
      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: latest
          extended: true
      - run: |-
          hugo --gc --enableGitInfo --minify --destination "${GITHUB_WORKSPACE}/dist" --logLevel debug
        env:
          VERSION: ${{ needs.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1

  netlify:
    name: Netlify
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy != 'none' }}
    needs:
      - hugo-build
    environment:
      name: netlify
      url: ${{ steps.netlify.outputs.deploy-url }}
    permissions:
      deployments: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          name: build
          path: dist
      # https://github.com/marketplace/actions/netlify-actions
      - id: branch_sha
        run: |-
          echo "branch_sha=$(echo "$GITHUB_REF_NAME" | sha256sum | cut -c -8)" >> $GITHUB_OUTPUT
      - id: config
        run: |-
          [ ! -f netlify.toml ] || echo "path=netlify.toml" >> $GITHUB_OUTPUT
      - id: netlify
        uses: nwtgck/actions-netlify@v3
        with:
          alias: ${{ steps.branch_sha.outputs.branch_sha }}
          deploy-message: ${{ github.ref_name }}
          enable-commit-comment: false
          enable-commit-status: false
          github-deployment-environment: netlify
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-config-path: ${{ steps.config.outputs.path }}
          production-branch: ${{ github.event.repository.default_branch }}
          publish-dir: dist
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
